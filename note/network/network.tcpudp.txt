TCP 接收窗口和 TCP 吞吐量

为了优化 TCP 吞吐量（假设为合理的无差错传输路径），发送端应该发送足够的数据包以填满发送端和接收端之间的逻辑管道。逻辑管道的容量可由以下公式计算：

    Capacity in bits = path bandwidth in bits per second * round-trip time (RTT) in seconds

容量称为带宽延迟乘积 (BDP)。管道可以用粗（高带宽）和细（低带宽）或者长（高 RTT）和短（低 RTT）来表示。粗而长的管道的 BDP 最高。使用高 BDP 传输路径的示例包括卫星链接或带有洲际光缆链接的企业广域网 (WAN)。

TCP 报头中的“窗口”字段大小为 16 位，允许 TCP 对等方通告最大为 65,535 字节的接收窗口。您可以根据以下公式计算给定 TCP 窗口的近似吞吐量：

    Throughput = TCP maximum receive windowsize / RTT

例如，对于 65,535 字节的接收窗口，在 RTT 为 100 毫秒的路径上只能达到速度大约为每秒 65536 * 8/ 0.1=5.24 兆字节 (Mbps) 的吞吐量，而不管传输路径的实际带宽是多少。对于目前的高 BDP 传输路径，最初设计的 TCP 窗口大小即使达到最大值，仍然是吞吐量的瓶颈。

注意：这里的延迟可以通过ping来获取！

==================

1.IP分片产生的原因是网络层的MTU；TCP分段产生原因是MSS.

2.IP分片由网络层完成，也在网络层进行重组；TCP分段是在传输层完成，并在传输层进行重组.   //透明性

3.对于以太网，MSS为1460字节，而MUT往往会大于MSS.

 

故采用TCP协议进行数据传输，是不会造成IP分片的。若数据过大，只会在传输层进行数据分段，到了IP层就不用分片。

而我们常提到的IP分片是由于UDP传输协议造成的，因为UDP传输协议并未限定传输数据报的大小。

